#!/bin/bash

# üöÄ Script de Deploy para GitHub Pages
# Uso: ./deploy.sh

echo "üöÄ ORDRX Landing Page - Deploy Script"
echo "======================================"
echo ""

# Cores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Verifica se est√° no diret√≥rio correto
if [ ! -f "index.html" ]; then
    echo -e "${RED}‚ùå Erro: index.html n√£o encontrado!${NC}"
    echo "Execute este script na raiz do projeto."
    exit 1
fi

# Verifica se o arquivo CNAME existe
if [ ! -f "CNAME" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Arquivo CNAME n√£o encontrado!${NC}"
    read -p "Digite seu dom√≠nio (ex: ordrx.com.br) ou pressione ENTER para pular: " domain
    if [ ! -z "$domain" ]; then
        echo "$domain" > CNAME
        echo -e "${GREEN}‚úÖ Arquivo CNAME criado com: $domain${NC}"
    fi
fi

# Mostra status do git
echo -e "${YELLOW}üìã Status do reposit√≥rio:${NC}"
git status --short
echo ""

# Pergunta se deseja continuar
read -p "Deseja fazer commit e push? (s/n): " confirm
if [ "$confirm" != "s" ] && [ "$confirm" != "S" ]; then
    echo -e "${RED}‚ùå Deploy cancelado.${NC}"
    exit 0
fi

# Adiciona todos os arquivos
echo -e "${YELLOW}üì¶ Adicionando arquivos...${NC}"
git add .

# Pede mensagem de commit
read -p "Mensagem do commit (ou ENTER para usar padr√£o): " commit_msg
if [ -z "$commit_msg" ]; then
    commit_msg="Update landing page - $(date '+%Y-%m-%d %H:%M')"
fi

# Faz commit
echo -e "${YELLOW}üíæ Fazendo commit...${NC}"
git commit -m "$commit_msg"

# Verifica se h√° mudan√ßas para commitar
if [ $? -ne 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Nenhuma mudan√ßa para commitar.${NC}"
    read -p "Deseja fazer push mesmo assim? (s/n): " force_push
    if [ "$force_push" != "s" ] && [ "$force_push" != "S" ]; then
        echo -e "${RED}‚ùå Deploy cancelado.${NC}"
        exit 0
    fi
fi

# Faz push
echo -e "${YELLOW}üöÄ Enviando para GitHub...${NC}"
git push origin main

if [ $? -eq 0 ]; then
    echo ""
    echo -e "${GREEN}‚úÖ Deploy realizado com sucesso!${NC}"
    echo ""
    echo "üìç Pr√≥ximos passos:"
    echo ""
    echo "1Ô∏è‚É£  Acesse: https://github.com/SEU-USUARIO/SEU-REPO/settings/pages"
    echo "2Ô∏è‚É£  Verifique se o GitHub Pages est√° ativo"
    echo "3Ô∏è‚É£  Configure seu dom√≠nio customizado (se houver)"
    echo "4Ô∏è‚É£  Aguarde 2-5 minutos para o deploy completar"
    echo ""
    
    # Verifica se tem CNAME configurado
    if [ -f "CNAME" ]; then
        domain=$(cat CNAME)
        echo -e "${GREEN}üåê Dom√≠nio configurado: $domain${NC}"
        echo ""
        echo "üìã Lembre-se de configurar o DNS na GoDaddy:"
        echo "   - Leia: CONFIGURACAO-DOMINIO.md"
        echo "   - Configure registros A/CNAME"
        echo "   - Aguarde propaga√ß√£o (10-30 min)"
        echo ""
    fi
    
    echo -e "${GREEN}üéâ Tudo pronto!${NC}"
else
    echo -e "${RED}‚ùå Erro ao fazer push!${NC}"
    echo "Verifique suas credenciais e conex√£o com o GitHub."
    exit 1
fi

